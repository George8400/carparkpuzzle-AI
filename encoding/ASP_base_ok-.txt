
matrix(0..5, 0..5).

% costruiamo i fatti della matrice con le celle occupate dai relativi oggetti
% Player
cell(X,Y,T,ID) :- car(X,Y,_,_,T,ID), T="Player".
cell(X+1,Y,T,ID) :- car(X,Y,_,_,T,ID), T="Player".

% CarHorizontal
cell(X,Y,T,ID) :- car(X,Y,_,_,T,ID), T="CarHorizontal".
cell(X+1,Y,T,ID) :- car(X,Y,_,_,T,ID), T="CarHorizontal".

% CarVertical
cell(X,Y,T,ID) :- car(X,Y,_,_,T,ID), T="CarVertical".
cell(X,Y+1,T,ID) :- car(X,Y,_,_,T,ID), T="CarVertical".

% CamionHorizontal
cell(X,Y,T,ID) :- car(X,Y,_,_,T,ID), T="CamionHorizontal".
cell(X+1,Y,T,ID) :- car(X,Y,_,_,T,ID), T="CamionHorizontal".
cell(X+2,Y,T,ID) :- car(X,Y,_,_,T,ID), T="CamionHorizontal".

% CamionVertical
cell(X,Y,T,ID) :- car(X,Y,_,_,T,ID), T="CamionVertical".
cell(X,Y+1,T,ID) :- car(X,Y,_,_,T,ID), T="CamionVertical".
cell(X,Y+2,T,ID) :- car(X,Y,_,_,T,ID), T="CamionVertical".


% GUESS

move(X,Y,W,H,T,ID) | noMove(X,Y,W,H,T,ID) :- car(_,Y,W,H,T,ID), T="Player", matrix(X,_).
move(X,Y,W,H,T,ID) | noMove(X,Y,W,H,T,ID) :- car(_,Y,W,H,T,ID), T="CarHorizontal", matrix(X,_).
move(X,Y,W,H,T,ID) | noMove(X,Y,W,H,T,ID) :- car(X,_,W,H,T,ID), T="CarVertical", matrix(_,Y).
move(X,Y,W,H,T,ID) | noMove(X,Y,W,H,T,ID) :- car(_,Y,W,H,T,ID), T="CamionHorizontal", matrix(X,_).
move(X,Y,W,H,T,ID) | noMove(X,Y,W,H,T,ID) :- car(X,_,W,H,T,ID), T="CamionVertical", matrix(_,Y).

% CHECK

% non è possibile che ci siano due move con lo stesso ID
:- move(X,_,_,_,"Player",ID), move(X1,_,_,_,"Player",ID), X != X1.
:- move(X,_,_,_,"CarHorizontal",ID), move(X1,_,_,_,"CarHorizontal",ID), X != X1.
:- move(_,Y,_,_,"CarVertical",ID), move(_,Y1,_,_,"CarVertical",ID), Y != Y1.
:- move(X,_,_,_,"CamionHorizontal",ID), move(X1,_,_,_,"CamionHorizontal",ID), X != X1.
:- move(_,Y,_,_,"CamionVertical",ID), move(_,Y1,_,_,"CamionVertical",ID), Y != Y1.

% non è possibile che non ci sia neanche un move nell" answerset
:- #count{ID : move(X,Y,W,H,T,ID)} < 1.

% non è possibile spostare il player se davanti ci sono celle occupate
:- move(X,2,W,H,"Player",ID), newCell(X1,2,T,_), T != "Player", X > X1.

% limitiamo lo spostamento degli oggetti (non devono sforare la matrice)
% Player
:- move(X,Y,W,H,"Player",ID), X+1>5. 
:- move(X,Y,W,H,"Player",ID), X<0.
:- move(X,Y,W,H,"Player",ID), Y<0.
:- move(X,Y,W,H,"Player",ID), Y>5.
% CarHorizontal
:- move(X,Y,W,H,"CarHorizontal",ID), X+1>5.  
:- move(X,Y,W,H,"CarHorizontal",ID), X<0.
:- move(X,Y,W,H,"CarHorizontal",ID), Y<0.
:- move(X,Y,W,H,"CarHorizontal",ID), Y>5.
% CarVertical
:- move(X,Y,W,H,"CarVertical",ID), X>5.
:- move(X,Y,W,H,"CarVertical",ID), X<0.
:- move(X,Y,W,H,"CarVertical",ID), Y<0.
:- move(X,Y,W,H,"CarVertical",ID), Y+1>5.
% CamionHorizontal
:- move(X,Y,W,H,"CamionHorizontal",ID), X+2>5.
:- move(X,Y,W,H,"CamionHorizontal",ID), X<0.
:- move(X,Y,W,H,"CamionHorizontal",ID), Y<0.
:- move(X,Y,W,H,"CamionHorizontal",ID), Y>5.
% CamionVertical
:- move(X,Y,W,H,"CamionVertical",ID), X>5.  
:- move(X,Y,W,H,"CamionVertical",ID), X<0.
:- move(X,Y,W,H,"CamionVertical",ID), Y<0.
:- move(X,Y,W,H,"CamionVertical",ID), Y+2>5.

% costruiamo una pseudo-matrice temporanea con le celle occupate dai relativi oggetti mossi
% Player
tempCell(X,Y,T,ID) :- move(X,Y,_,_,T,ID), T="Player".
tempCell(X+1,Y,T,ID) :- move(X,Y,_,_,T,ID), T="Player".

% CarHorizontal
tempCell(X,Y,T,ID) :- move(X,Y,_,_,T,ID), T="CarHorizontal".
tempCell(X+1,Y,T,ID) :- move(X,Y,_,_,T,ID), T="CarHorizontal".

% CarVertical
tempCell(X,Y,T,ID) :- move(X,Y,_,_,T,ID), T="CarVertical".
tempCell(X,Y+1,T,ID) :- move(X,Y,_,_,T,ID), T="CarVertical".

% CamionHorizontal
tempCell(X,Y,T,ID) :- move(X,Y,_,_,T,ID), T="CamionHorizontal".
tempCell(X+1,Y,T,ID) :- move(X,Y,_,_,T,ID), T="CamionHorizontal".
tempCell(X+2,Y,T,ID) :- move(X,Y,_,_,T,ID), T="CamionHorizontal".

% CamionVertical
tempCell(X,Y,T,ID) :- move(X,Y,_,_,T,ID), T="CamionVertical".
tempCell(X,Y+1,T,ID) :- move(X,Y,_,_,T,ID), T="CamionVertical".
tempCell(X,Y+2,T,ID) :- move(X,Y,_,_,T,ID), T="CamionVertical".


% da rigurdare
% non è possibile che la vecchia matrice e la matrice temporanea abbiano celle occupate da oggetti diversi
% :- tempCell(X,Y,_,ID), cell(X,Y,_,ID1), ID != ID1.

% prendiamo gli id degli oggetti mossi
idMove(ID) :- move(_,_,_,_,_,ID).

% da riguardare
% costruiamo la NUOVA matrice unendo la vecchia e la temporanea
newCell(X,Y,T,ID) :- tempCell(X,Y,T,ID).
newCell(X,Y,T,ID) :- cell(X,Y,T,ID), not idMove(ID).


% non è possibile che due car mosse occupino la stessa cella
:- newCell(X,Y,T,ID), newCell(X,Y,T1,ID1), ID != ID1.


% WEAK CONSTRAINT
% non vorrei che la riga del player fosse occupata da altri veicoli (paghiamo per ogni cella occupata da altri veicoli)
% :~ move(X,Y,W,H,T,ID), Y=2, T!="Player".[1@1]
% :~ newCell(_,2,T,_), T!="Player".[1@1]
% :~ newCell(X,2,T,_), move(X1,_,_,_,"Player",_), T!="Player", X>X1+1.[1@1, X]
 :~ newCell(X,2,T,_), newCell(X1,2,"Player",_), T!="Player", X>X1+1.[1@1, X]
% :~ move(0,2,_,_,"Player",_).[4@1]
% :~ move(1,2,_,_,"Player",_).[3@1]
% :~ move(2,2,_,_,"Player",_).[2@1]
% :~ move(3,2,_,_,"Player",_).[1@1]
% :~ move(4,2,_,_,"Player",_).[0@1]
% :~ move(X,2,_,_,"Player",_), X<4.[1@1]

 :~ newCell(0,2,"Player",_), newCell(1,2,"Player",_).[4@1]
 :~ newCell(1,2,"Player",_), newCell(2,2,"Player",_).[3@1]
 :~ newCell(2,2,"Player",_), newCell(3,2,"Player",_).[2@1]
 :~ newCell(3,2,"Player",_), newCell(4,2,"Player",_).[1@1]
 :~ newCell(4,2,"Player",_), newCell(5,2,"Player",_).[0@1]
 :~ newCell(X,2,"Player",_), X<4.[1@1, X]
 
 :~ move(X,Y,W,H,T,ID).[1@1,ID]